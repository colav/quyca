FROM python:3.10 as python-base

# Poetry configuration
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    \
    PIP_NO_CACHE_DIR=off \
    PIP_DISABLE_PIP_VERSION_CHECK=on \
    PIP_DEFAULT_TIMEOUT=100 \
    \
    POETRY_VERSION=1.6.1 \
    POETRY_HOME="/opt/poetry" \
    POETRY_VIRTUALENVS_IN_PROJECT=true \
    POETRY_NO_INTERACTION=1 \
    PYSETUP_PATH="/opt/pysetup" \
    VENV_PATH="/opt/pysetup/.venv"

ENV PATH="$POETRY_HOME/bin:$VENV_PATH/bin:$PATH"


FROM python-base as requirements-image
RUN apt-get update \
    && apt-get install --no-install-recommends -y \
    curl \
    build-essential

RUN curl -sSL https://install.python-poetry.org | python 

WORKDIR $PYSETUP_PATH
RUN poetry config virtualenvs.options.system-site-packages true

WORKDIR /usr/src/quyca
COPY pyproject.toml poetry.lock ./

RUN poetry export --without-hashes --with dev --format=requirements.txt > requirements.txt


FROM python-base as compile-image
WORKDIR /usr/src/quyca
COPY --from=requirements-image /usr/src/quyca/requirements.txt /usr/src/quyca/requirements.txt
# set environment varibles
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# install system dependencies
RUN apt-get update \
    && apt-get install --no-install-recommends -y \
    curl \
    build-essential \
    && python -m venv /home/venv

ENV PATH="/home/venv/bin:$PATH"
RUN pip install --no-cache-dir -r requirements.txt

FROM python:3.10 AS runtime-image
RUN curl -fsSL https://deb.nodesource.com/setup_16.x | bash - \
    && apt-get install -y nodejs \
    && npm install -g apidoc
ENV PYTHONUNBUFFERED TRUE
COPY --from=compile-image /home/venv /home/venv
ENV PATH="/home/venv/bin:$PATH"
WORKDIR /usr/src/quyca
COPY .dockerignore .dockerignore
EXPOSE 80
COPY quyca/ quyca/
# RUN apidoc -i /usr/src/quyca/app/api/routes/v1 \
#     -o /usr/src/quyca/app/api/apidoc/ \
#     -c /usr/src/quyca/app/apidoc.json